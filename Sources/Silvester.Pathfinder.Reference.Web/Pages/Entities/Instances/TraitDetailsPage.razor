@using System.Linq;
@using Silvester.Pathfinder.Official.Web.Shared.Layout;
@using System.Reactive.Linq;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Feats;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Feats.Providers;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Spells;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Spells.Providers;
@using Silvester.Pathfinder.Official.Web.Components.Cards;
@using Silvester.Pathfinder.Official.Web.Components.Cards.Details.Instances;

@inherits BaseDetailPage
@implements IDisposable

@page "/traits/{resourceId:guid}"
<div>
    <PageLayout>
        <MudPaper Style="margin: 20px">
            <TraitDetailsCard Entity="@Trait" />
        </MudPaper>

        <MudPaper Style="margin: 20px; margin-top:40px;">
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" Border="true">
                <MudTabPanel Text="Feats">
                    <FeatsTable PageProvider="@(new FeatPageWithTraitProvider(PathfinderOfficialApi, ResourceId))" />
                </MudTabPanel>
                <MudTabPanel Text="Spells">
                    <SpellsTable PageProvider="@(new SpellPageWithTraitProvider(PathfinderOfficialApi, ResourceId))" />
                </MudTabPanel>
            </MudTabs>
        </MudPaper>
    </PageLayout>
</div>

@code {
    protected override string CollectionName => "traits";
    protected override string? ResourceName => Trait?.Name;

    public ITraitById? Trait { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        StoreSession = PathfinderOfficialApi.GetTraitById
            .Watch(ResourceId, StrawberryShake.ExecutionStrategy.CacheFirst)
            .Select(e => e.Data?.Traits?.Items?.FirstOrDefault())
            .Subscribe(trait =>
            {
                Trait = trait;
                OnResourceLoaded();
            });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}