@using Silvester.Pathfinder.Reference.Web.Shared.Layout;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.Heritages;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.Heritages.Providers;
@using Silvester.Pathfinder.Reference.Web.Components.Cards;
@using Silvester.Pathfinder.Reference.Web.Components.Cards.Details.Instances;

@inherits BaseDetailPage
@page "/races/{resourceId:guid}"
@implements IDisposable

<div>
    <PageLayout>
        <MudPaper Style="margin: 20px">
            <RaceDetailsCard Entity="@Race" />
        </MudPaper>

        <MudPaper Style="margin: 20px">
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" Border="true">
                <MudTabPanel Text="Heritages">
                    <HeritagesTable PageProvider="@(new HeritagePageWithRaceProvider(PathfinderReferenceApi, ResourceId))" />
                </MudTabPanel>
            </MudTabs>
        </MudPaper>
    </PageLayout>
</div>

@code {
    protected override string CollectionName => "races";
    protected override string? ResourceName => Race?.Name;

    private IGetRaceById_Races_Items? Race { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        StoreSession = PathfinderReferenceApi.GetRaceById
        .Watch(ResourceId, StrawberryShake.ExecutionStrategy.NetworkOnly)
        .Select(e => e.Data?.Races?.Items?.FirstOrDefault())
        .Subscribe(race =>
        {
            Race = race;
            OnResourceLoaded();
        });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}