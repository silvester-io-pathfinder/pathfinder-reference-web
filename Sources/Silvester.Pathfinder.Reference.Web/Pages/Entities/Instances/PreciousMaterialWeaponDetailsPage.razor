@using Silvester.Pathfinder.Official.Web.Shared.Layout;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Heritages;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Heritages.Providers;
@using Silvester.Pathfinder.Official.Web.Components.Cards;
@using Silvester.Pathfinder.Official.Web.Components.Cards.Details.Instances;
@using Silvester.Pathfinder.Official.Web.Shared.Cards;
@using Silvester.Pathfinder.Official.Web.Services.Currencies;

@inherits BaseDetailPage
@page "/precious-material-weapons/{resourceId:guid}"
@implements IDisposable

<div>
    <PageLayout>
        <MudPaper Style="margin: 20px">
            <PreciousMaterialWeaponDetailsCard Entity="@Weapon" />
        </MudPaper>

        @if (Weapon != null)
        {
            <MudPaper Style="margin: 20px;">
                <CardToolbar>
                    <MudText Typo="Typo.h6">Variants</MudText>
                </CardToolbar>
                <MudDivider />
                <MudTable Style="overflow-x: scroll;" Breakpoint="Breakpoint.None" Items="@Weapon.Variants.OrderBy(e => e.Grade.Order)" Dense="true" Hover="true" Striped="true" SortLabel="Sort By">
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortBy="new Func<IGetPreciousMaterialWeaponById_PreciousMaterialWeapons_Items_Variants, object?>(e => e.Grade.Name)">Grade</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<IGetPreciousMaterialWeaponById_PreciousMaterialWeapons_Items_Variants, object>(e => e.Price)">Price</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<IGetPreciousMaterialWeaponById_PreciousMaterialWeapons_Items_Variants, object>(e => e.AdditionalPricePerBulk)">Additional Price per Bulk</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<IGetPreciousMaterialWeaponById_PreciousMaterialWeapons_Items_Variants, object>(e => e.ItemLevel)">Item Level</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<IGetPreciousMaterialWeaponById_PreciousMaterialWeapons_Items_Variants, object>(e => e.CraftRequirements)">Crafting Requirements</MudTableSortLabel></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Addendum">@context.Grade.Name</MudTd>
                        <MudTd DataLabel="Price">@(CurrencyService.Denormalize(context.Price).ToString())</MudTd>
                        <MudTd DataLabel="Price">@(CurrencyService.Denormalize(context.AdditionalPricePerBulk).ToString())</MudTd>
                        <MudTd DataLabel="Item Level">@context.ItemLevel.ToString()</MudTd>
                        <MudTd DataLabel="Crafting Requirements">@context.CraftRequirements</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        }
    </PageLayout>
</div>

@code {
    protected override string CollectionName => "precious-material-weapons";
    protected override string? ResourceName => Weapon?.Name;

    [Inject]
    public ICurrencyService CurrencyService { get; set; } = default!;

    private IPreciousMaterialWeaponById? Weapon { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        StoreSession = PathfinderOfficialApi.GetPreciousMaterialWeaponById
            .Watch(ResourceId, StrawberryShake.ExecutionStrategy.NetworkOnly)
            .Select(e => e.Data?.PreciousMaterialWeapons?.Items?.FirstOrDefault())
            .Subscribe(shield =>
            {
                Weapon = shield;
                OnResourceLoaded();
            });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}