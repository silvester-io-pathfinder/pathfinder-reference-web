@using Silvester.Pathfinder.Reference.Web.Shared.Layout;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.RangedWeapons;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.RangedWeapons.Providers;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.MeleeWeapons;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.MeleeWeapons.Providers;
@using Silvester.Pathfinder.Reference.Web.Components.Cards;
@using Silvester.Pathfinder.Reference.Web.Components.Cards.Details.Instances;

@inherits BaseDetailPage
@page "/fundamental-weapon-runes/{resourceId:guid}"
@implements IDisposable

<div>
    <PageLayout>
        <MudPaper Style="margin: 20px">
            <FundamentalWeaponRuneDetailsCard Entity="@FundamentalWeaponRune" />
        </MudPaper>
    </PageLayout>
</div>

@code {
    protected override string CollectionName => "fundamental-weapon-runes";
    protected override string? ResourceName => FundamentalWeaponRune?.Name;


    private IFundamentalWeaponRuneById? FundamentalWeaponRune { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        StoreSession = PathfinderReferenceApi.GetFundamentalWeaponRuneById
            .Watch(ResourceId, StrawberryShake.ExecutionStrategy.NetworkOnly)
            .Select(e => e.Data?.FundamentalWeaponRunes?.Items?.FirstOrDefault())
            .Subscribe(fundamentalWeaponRune =>
            {
                FundamentalWeaponRune = fundamentalWeaponRune;
                OnResourceLoaded();
            });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}