@using Silvester.Pathfinder.Official.Web.Shared.Layout;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Deities;
@using Silvester.Pathfinder.Official.Web.Components.Tables.Instances.Deities.Providers;
@using Silvester.Pathfinder.Official.Web.Components.Cards;
@using Silvester.Pathfinder.Official.Web.Components.Cards.Details.Instances;

@inherits BaseDetailPage
@page "/deity-categories/{resourceId:guid}"
@implements IDisposable

<div>
    <PageLayout>
        @if (DeityCategory != null)
        {
            <MudPaper Style="margin: 20px">
                <DeityCategoryDetailsCard Entity="@DeityCategory" />
            </MudPaper>

            <MudPaper Style="margin: 20px">
                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" Border="true">
                    <MudTabPanel Text="Deities">
                        <DeitiesTable PageProvider="@(new DeityPageWithCategoryProvider(PathfinderOfficialApi, ResourceId))" />
                    </MudTabPanel>
                </MudTabs>
            </MudPaper>
        }
    </PageLayout>
</div>

@code {
    protected override string CollectionName => "deity-categories";
    protected override string? ResourceName => DeityCategory?.Name;

    private IGetDeityCategoryById_DeityCategories_Items? DeityCategory { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        StoreSession = PathfinderOfficialApi.GetDeityCategoryById
            .Watch(ResourceId, StrawberryShake.ExecutionStrategy.NetworkOnly)
            .Select(e => e.Data?.DeityCategories?.Items?.FirstOrDefault())
            .Subscribe(deityCategory =>
            {
                DeityCategory = deityCategory;
                OnResourceLoaded();
            });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}