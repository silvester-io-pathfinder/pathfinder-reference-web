@using Silvester.Pathfinder.Reference.Web.Shared.Layout;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.Conditions;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.ConditionCategories;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.Conditions.Providers;
@using Silvester.Pathfinder.Reference.Web.Components.Tables.Instances.ConditionCategories.Providers;
@using Silvester.Pathfinder.Reference.Web.Components.Cards;
@using Silvester.Pathfinder.Reference.Web.Components.Cards.Details.Instances;

@inherits BaseDetailPage
@page "/condition-categories/{resourceId:guid}"
@implements IDisposable

<div>
    <PageLayout>
        @if (ConditionCategory != null)
        {
            <MudPaper Style="margin: 20px">
                <ConditionCategoryDetailsCard Entity="@ConditionCategory" />
            </MudPaper>

            <MudPaper Style="margin: 20px">
                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" Border="true">
                    <MudTabPanel Text="Conditions">
                        <ConditionsTable PageProvider="@(new ConditionsPageWithCategoryProvider(PathfinderReferenceApi, ResourceId))" />
                    </MudTabPanel>
                </MudTabs>
            </MudPaper>
        }
    </PageLayout>
</div>

@code {
    protected override string CollectionName => "condition-categories";
    protected override string? ResourceName => ConditionCategory?.Name;

    private IConditionCategoryById? ConditionCategory { get; set; }

    private IDisposable? StoreSession { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        StoreSession = PathfinderReferenceApi.GetConditionCategoryById
            .Watch(ResourceId)
            .Select(e => e.Data?.ConditionCategories?.Items?.FirstOrDefault())
            .Subscribe(curse =>
            {
                ConditionCategory = curse;
                OnResourceLoaded();
            });
    }

    public void Dispose()
    {
        StoreSession?.Dispose();
    }
}